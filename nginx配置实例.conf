server {
        listen       80;
        server_name  test.smarterast.com zhihuikexie.jnkp.cn;
		location / {
                root /usr/share/nginx/kexieyijia/;
                index  index.html index.jsp index.html;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                add_header Access-Control-Allow-Origin *;
        }
        location ^~ /backadmin/ {
                proxy_pass http://127.0.0.1:6008;
                proxy_redirect off;
                proxy_set_header Host $host;    #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                client_max_body_size 1g;   #允许客户端请求的最大单文件字节数
                client_body_buffer_size 128k; #缓冲区代理缓冲用户端请求的最大字节数
                proxy_connect_timeout 90;   #nginx跟后端服务器连接超时时间(代理连接超时)
                proxy_read_timeout 90;      #连接成功后，后端服务器响应时间(代理接收超时)
                proxy_buffer_size 12k;       #设置代理服务器（nginx）保存用户头信息的缓冲区大小
                proxy_buffers 18 96k;        #proxy_buffers缓冲区，网页平均在32k以下的话，这样设置
                proxy_busy_buffers_size 192k;#高负荷下缓冲大小（proxy_buffers*2）
                proxy_temp_file_write_size 124k; #设定缓存文件夹大小，大于这个值，将从upstream服务器传
        }
		location ^~ /qywxsdk/ {
                proxy_pass http://127.0.0.1:6008;
                proxy_redirect off;
                proxy_set_header Host $host;    #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                client_max_body_size 1g;   #允许客户端请求的最大单文件字节数
                client_body_buffer_size 128k; #缓冲区代理缓冲用户端请求的最大字节数
                proxy_connect_timeout 90;   #nginx跟后端服务器连接超时时间(代理连接超时)
                proxy_read_timeout 90;      #连接成功后，后端服务器响应时间(代理接收超时)
                proxy_buffer_size 8k;       #设置代理服务器（nginx）保存用户头信息的缓冲区大小
                proxy_buffers 12 64k;        #proxy_buffers缓冲区，网页平均在32k以下的话，这样设置
                proxy_busy_buffers_size 128k;#高负荷下缓冲大小（proxy_buffers*2）
                proxy_temp_file_write_size 124k; #设定缓存文件夹大小，大于这个值，将从upstream服务器传
        }
		location ^~ /framework/ {
                proxy_pass http://127.0.0.1:6008;
                proxy_redirect off;
                proxy_set_header Host $host;    #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                client_max_body_size 1g;   #允许客户端请求的最大单文件字节数
                client_body_buffer_size 128k; #缓冲区代理缓冲用户端请求的最大字节数
                proxy_connect_timeout 90;   #nginx跟后端服务器连接超时时间(代理连接超时)
                proxy_read_timeout 90;      #连接成功后，后端服务器响应时间(代理接收超时)
                proxy_buffer_size 8k;       #设置代理服务器（nginx）保存用户头信息的缓冲区大小
                proxy_buffers 12 64k;        #proxy_buffers缓冲区，网页平均在32k以下的话，这样设置
                proxy_busy_buffers_size 128k;#高负荷下缓冲大小（proxy_buffers*2）
                proxy_temp_file_write_size 124k; #设定缓存文件夹大小，大于这个值，将从upstream服务器传
        }
		location ^~ /rwqd/ {
                root /usr/share/nginx/zhkx;
                index  index.html index.jsp index.html;
				try_files $uri /rwqd/index.html;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                add_header Access-Control-Allow-Origin *;
        }
		location ^~ /xhgl/ {
                root /usr/share/nginx/zhkx;
                index  index.html index.jsp index.html;
				try_files $uri /xhgl/index.html;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                add_header Access-Control-Allow-Origin *;
        }
		location ^~ /kpgl/ {
                root /usr/share/nginx/zhkx;
                index  index.html index.jsp index.html;
				try_files $uri /kpgl/index.html;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                add_header Access-Control-Allow-Origin *;
        }
		location ^~ /nologin/ {
                root /usr/share/nginx/zhkx;
                index  index.html index.jsp index.html;
				try_files $uri /nologin/index.html;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                add_header Access-Control-Allow-Origin *;
        }
		location ^~ /noaccount/ {
                root /usr/share/nginx/zhkx;
                index  index.html index.jsp index.html;
				try_files $uri /noaccount/index.html;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                add_header Access-Control-Allow-Origin *;
        }
		location ^~ /account/ {
                root /usr/share/nginx/zhkx;
                index  index.html index.jsp index.html;
				try_files $uri /account/index.html;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                add_header Access-Control-Allow-Origin *;
        }
		#location ^~ /front/ {
			#        proxy_pass http://127.0.0.1:3000;
		#}
		#location ^~ /static/ {
			#        proxy_pass http://127.0.0.1:3000;
        #}
		location ^~ /front/ {
                root /usr/share/nginx/kexieyijia/;
                index  index.html index.jsp index.html;
				try_files $uri /front/index.html;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                add_header Access-Control-Allow-Origin *;
        }
        location ^~ /static/ {
                root  /usr/share/nginx/kexieyijia/front/;
                index  index.html index.jsp index.html;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                add_header Access-Control-Allow-Origin *;
        }
		gzip on;
		gzip_buffers 32 4k;
		gzip_comp_level 6;
		gzip_min_length 200;
		gzip_types text/css text/xml application/javascript;
		gzip_vary on;
}
server {
        listen       80;
        server_name  nongxuehuideclare.smarterast.com;
		location / {
                root /usr/share/nginx/sbzhxh/;
                index  index.html index.jsp index.html;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                add_header Access-Control-Allow-Origin *;
        }
        location ^~ /backadmin/ {
                proxy_pass http://127.0.0.1:6208;
                proxy_redirect off;
                proxy_set_header Host $host;    #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                client_max_body_size 1g;   #允许客户端请求的最大单文件字节数
                client_body_buffer_size 128k; #缓冲区代理缓冲用户端请求的最大字节数
                proxy_connect_timeout 90;   #nginx跟后端服务器连接超时时间(代理连接超时)
                proxy_read_timeout 90;      #连接成功后，后端服务器响应时间(代理接收超时)
                proxy_buffer_size 12k;       #设置代理服务器（nginx）保存用户头信息的缓冲区大小
                proxy_buffers 18 96k;        #proxy_buffers缓冲区，网页平均在32k以下的话，这样设置
                proxy_busy_buffers_size 192k;#高负荷下缓冲大小（proxy_buffers*2）
                proxy_temp_file_write_size 124k; #设定缓存文件夹大小，大于这个值，将从upstream服务器传
        }
		location ^~ /qywxsdk/ {
                proxy_pass http://127.0.0.1:6208;
                proxy_redirect off;
                proxy_set_header Host $host;    #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                client_max_body_size 1g;   #允许客户端请求的最大单文件字节数
                client_body_buffer_size 128k; #缓冲区代理缓冲用户端请求的最大字节数
                proxy_connect_timeout 90;   #nginx跟后端服务器连接超时时间(代理连接超时)
                proxy_read_timeout 90;      #连接成功后，后端服务器响应时间(代理接收超时)
                proxy_buffer_size 8k;       #设置代理服务器（nginx）保存用户头信息的缓冲区大小
                proxy_buffers 12 64k;        #proxy_buffers缓冲区，网页平均在32k以下的话，这样设置
                proxy_busy_buffers_size 128k;#高负荷下缓冲大小（proxy_buffers*2）
                proxy_temp_file_write_size 124k; #设定缓存文件夹大小，大于这个值，将从upstream服务器传
        }
		location ^~ /framework/ {
                proxy_pass http://127.0.0.1:6208;
                proxy_redirect off;
                proxy_set_header Host $host;    #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                client_max_body_size 1g;   #允许客户端请求的最大单文件字节数
                client_body_buffer_size 128k; #缓冲区代理缓冲用户端请求的最大字节数
                proxy_connect_timeout 90;   #nginx跟后端服务器连接超时时间(代理连接超时)
                proxy_read_timeout 90;      #连接成功后，后端服务器响应时间(代理接收超时)
                proxy_buffer_size 8k;       #设置代理服务器（nginx）保存用户头信息的缓冲区大小
                proxy_buffers 12 64k;        #proxy_buffers缓冲区，网页平均在32k以下的话，这样设置
                proxy_busy_buffers_size 128k;#高负荷下缓冲大小（proxy_buffers*2）
                proxy_temp_file_write_size 124k; #设定缓存文件夹大小，大于这个值，将从upstream服务器传
        }
		#location ^~ /front/ {
			#        proxy_pass http://127.0.0.1:3000;
		#}
		#location ^~ /static/ {
			#        proxy_pass http://127.0.0.1:3000;
        #}
		location ^~ /front/ {
                root /usr/share/nginx/sbzhxh/;
                index  index.html index.jsp index.html;
				try_files $uri /front/index.html;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                add_header Access-Control-Allow-Origin *;
        }
			location ^~ /Declare/ {
                root  /usr/share/nginx/sbzhxh/;
                index  index.html index.jsp index.html;
		try_files $uri /front/index.html;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                add_header Access-Control-Allow-Origin *;
        }
        location ^~ /static/ {
                root  /usr/share/nginx/sbzhxh/front/;
                index  index.html index.jsp index.html;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                add_header Access-Control-Allow-Origin *;
        }
		gzip on;
		gzip_buffers 32 4k;
		gzip_comp_level 6;
		gzip_min_length 200;
		gzip_types text/css text/xml application/javascript;
		gzip_vary on;
}
server {
	listen	80;
	server_name kpszcp.payjiabao.com;
	location / {
		proxy_pass   http://127.0.0.1:6007;
	}
}
server {
        listen  80;
        server_name preview.sd-aa.cn;
        location / {
                proxy_pass   http://127.0.0.1:8012;
				proxy_redirect off;
                proxy_set_header Host $host;    #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
}

#server {
#    listen 80;
#    server_name tqkp.smarterast.com;
#    rewrite ^(.*)$  https://$host$1 permanent;      #跳转到Https
#}
#server {
 #       listen       443 ssl;
  #      server_name  tqkp.smarterast.com;
#		ssl on;
 #       ssl_certificate   /certs/tqkp.smarterast.com_nginx/4454292_tqkpzs.smarterast.com.pem;
  #      ssl_certificate_key  /certs/tqkp.smarterast.com_nginx/4454292_tqkpzs.smarterast.com.key;
   #     ssl_session_timeout 5m;
    #    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
#        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
 #       ssl_prefer_server_ciphers on;
#		error_page 497 "https://$host$uri?$args"; #这是跳转Http请求到Https
#              location / {
  #              proxy_pass http://127.0.0.1:6118;
 #               proxy_redirect off;
 #               proxy_set_header Host $host;    #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
 #               proxy_set_header X-Real-IP $remote_addr;
  #              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#				proxy_set_header X-Forwarded-Proto $scheme;
  #              client_max_body_size 1g;   #允许客户端请求的最大单文件字节数
 #               client_body_buffer_size 128k; #缓冲区代理缓冲用户端请求的最大字节数
  #              proxy_connect_timeout 90;   #nginx跟后端服务器连接超时时间(代理连接超时)
   #             proxy_read_timeout 90;      #连接成功后，后端服务器响应时间(代理接收超时)
   #             proxy_buffer_size 4k;       #设置代理服务器（nginx）保存用户头信息的缓冲区大小
   #             proxy_buffers 6 32k;        #proxy_buffers缓冲区，网页平均在32k以下的话，这样设置
   #             proxy_busy_buffers_size 64k;#高负荷下缓冲大小（proxy_buffers*2）
   #             proxy_temp_file_write_size 124k; #设定缓存文件夹大小，大于这个值，将从upstream服务器传
#				}
    #            gzip on;
    #            gzip_buffers 32 4k;
    #            gzip_comp_level 6;
   #             gzip_min_length 200;
    #            gzip_types text/css text/xml application/javascript;
   #             gzip_vary on;
#}


server {
        listen       80;
        server_name  www.sdsazbfzxh.cn;
        location / {
                proxy_pass http://127.0.0.1:9100;
                proxy_redirect off;
                proxy_set_header Host $host;    #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                client_max_body_size 1g;   #允许客户端请求的最大单文件字节数
                client_body_buffer_size 128k; #缓冲区代理缓冲用户端请求的最大字节数
                proxy_connect_timeout 90;   #nginx跟后端服务器连接超时时间(代理连接超时)
                proxy_read_timeout 90;      #连接成功后，后端服务器响应时间(代理接收超时)
                proxy_buffer_size 4k;       #设置代理服务器（nginx）保存用户头信息的缓冲区大小
                proxy_buffers 6 32k;        #proxy_buffers缓冲区，网页平均在32k以下的话，这样设置
                proxy_busy_buffers_size 64k;#高负荷下缓冲大小（proxy_buffers*2）
                proxy_temp_file_write_size 124k; #设定缓存文件夹大小，大于这个值，将从upstream服务器传
        }              
        gzip on;
        gzip_buffers 32 4k;
        gzip_comp_level 6;
        gzip_min_length 200;
        gzip_types text/css text/xml application/javascript;
        gzip_vary on;
}

server {
        listen       80;
        server_name  dashuju.sd-aa.cn;
        location / {
                proxy_pass http://127.0.0.1:9200;
                proxy_redirect off;
                proxy_set_header Host $host;    #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                client_max_body_size 1g;   #允许客户端请求的最大单文件字节数
                client_body_buffer_size 128k; #缓冲区代理缓冲用户端请求的最大字节数
                proxy_connect_timeout 90;   #nginx跟后端服务器连接超时时间(代理连接超时)
                proxy_read_timeout 90;      #连接成功后，后端服务器响应时间(代理接收超时)
                proxy_buffer_size 4k;       #设置代理服务器（nginx）保存用户头信息的缓冲区大小
                proxy_buffers 6 32k;        #proxy_buffers缓冲区，网页平均在32k以下的话，这样设置
                proxy_busy_buffers_size 64k;#高负荷下缓冲大小（proxy_buffers*2）
                proxy_temp_file_write_size 124k; #设定缓存文件夹大小，大于这个值，将从upstream服务器传
        }              
        gzip on;
        gzip_buffers 32 4k;
        gzip_comp_level 6;
        gzip_min_length 200;
        gzip_types text/css text/xml application/javascript;
        gzip_vary on;
}

server {
        listen       80;
        location / {
                proxy_pass http://127.0.0.1:9300;
                proxy_redirect off;
                proxy_set_header Host $host;    #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                client_max_body_size 1g;   #允许客户端请求的最大单文件字节数
                client_body_buffer_size 128k; #缓冲区代理缓冲用户端请求的最大字节数
                proxy_connect_timeout 90;   #nginx跟后端服务器连接超时时间(代理连接超时)
                proxy_read_timeout 90;      #连接成功后，后端服务器响应时间(代理接收超时)
                proxy_buffer_size 4k;       #设置代理服务器（nginx）保存用户头信息的缓冲区大小
                proxy_buffers 6 32k;        #proxy_buffers缓冲区，网页平均在32k以下的话，这样设置
                proxy_busy_buffers_size 64k;#高负荷下缓冲大小（proxy_buffers*2）
                proxy_temp_file_write_size 124k; #设定缓存文件夹大小，大于这个值，将从upstream服务器传
        }              
        gzip on;
        gzip_buffers 32 4k;
        gzip_comp_level 6;
        gzip_min_length 200;
        gzip_types text/css text/xml application/javascript;
        gzip_vary on;
}
server {
        listen       80;
		server_name  jnkx.sd-aa.cn;
	        location / {
                proxy_pass http://127.0.0.1:9500;
                proxy_redirect off;
                proxy_set_header Host $host;    #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                client_max_body_size 1g;   #允许客户端请求的最大单文件字节数
                client_body_buffer_size 128k; #缓冲区代理缓冲用户端请求的最大字节数
                proxy_connect_timeout 90;   #nginx跟后端服务器连接超时时间(代理连接超时)
                proxy_read_timeout 90;      #连接成功后，后端服务器响应时间(代理接收超时)
                proxy_buffer_size 4k;       #设置代理服务器（nginx）保存用户头信息的缓冲区大小
                proxy_buffers 6 32k;        #proxy_buffers缓冲区，网页平均在32k以下的话，这样设置
                proxy_busy_buffers_size 64k;#高负荷下缓冲大小（proxy_buffers*2）
                proxy_temp_file_write_size 124k; #设定缓存文件夹大小，大于这个值，将从upstream服务器传
        }              
        gzip on;
        gzip_buffers 32 4k;
        gzip_comp_level 6;
        gzip_min_length 200;
        gzip_types text/css text/xml application/javascript;
        gzip_vary on;
}
server {
        listen       80;
        server_name  jiguan.com;
        location / {
                proxy_pass http://127.0.0.1:9400;
                proxy_redirect off;
                proxy_set_header Host $host;    #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                client_max_body_size 1g;   #允许客户端请求的最大单文件字节数
                client_body_buffer_size 128k; #缓冲区代理缓冲用户端请求的最大字节数
                proxy_connect_timeout 90;   #nginx跟后端服务器连接超时时间(代理连接超时)
                proxy_read_timeout 90;      #连接成功后，后端服务器响应时间(代理接收超时)
                proxy_buffer_size 4k;       #设置代理服务器（nginx）保存用户头信息的缓冲区大小
                proxy_buffers 6 32k;        #proxy_buffers缓冲区，网页平均在32k以下的话，这样设置
                proxy_busy_buffers_size 64k;#高负荷下缓冲大小（proxy_buffers*2）
                proxy_temp_file_write_size 124k; #设定缓存文件夹大小，大于这个值，将从upstream服务器传
        }              
        gzip on;
        gzip_buffers 32 4k;
        gzip_comp_level 6;
        gzip_min_length 200;
        gzip_types text/css text/xml application/javascript;
        gzip_vary on;
}

server {
        listen       80;
	#server_name test.huiyi.com;
        location / {
                proxy_pass http://127.0.0.1:9400;
                proxy_redirect off;
                proxy_set_header Host $host;    #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                client_max_body_size 1g;   #允许客户端请求的最大单文件字节数
                client_body_buffer_size 128k; #缓冲区代理缓冲用户端请求的最大字节数
                proxy_connect_timeout 90;   #nginx跟后端服务器连接超时时间(代理连接超时)
                proxy_read_timeout 90;      #连接成功后，后端服务器响应时间(代理接收超时)
                proxy_buffer_size 4k;       #设置代理服务器（nginx）保存用户头信息的缓冲区大小
                proxy_buffers 6 32k;        #proxy_buffers缓冲区，网页平均在32k以下的话，这样设置
                proxy_busy_buffers_size 64k;#高负荷下缓冲大小（proxy_buffers*2）
                proxy_temp_file_write_size 124k; #设定缓存文件夹大小，大于这个值，将从upstream服务器传
        }              
        gzip on;
        gzip_buffers 32 4k;
        gzip_comp_level 6;
        gzip_min_length 200;
        gzip_types text/css text/xml application/javascript;
        gzip_vary on;
}
#$uri /front/index.html;
